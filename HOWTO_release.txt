How to release JFlex
--------------------

This document describes how the release manager of the JFlex team can release 
JFlex and the JFlex Maven Plugin.

JFlex and the JFlex Maven Plugin will be deployed to the Sonatype OSS Maven
repository at <http://oss.sonatype.org>.  The Maven Central repository is
synchronized with this repository.  For more information, see 
<https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide>.

Preparing to release
--------------------

1. First, create a JIRA account on jira.sonatype.org, then make sure that your
   account is authorized to deploy to the Sonatype OSS Maven repository - see
   the above-linked usage guide for more information.

2. In your ~/.m2/settings.xml, create <server>-s for snapshots and releases on
   the Sonatype OSS Maven repository.  Fill in the username and password for
   your Sonatype JIRA account, which is also the account for the Sonatype
   Nexus instance that serves the OSS Maven repository: 

   -----
   <?xml version="1.0" encoding="UTF-8"?>
   <settings xmlns="http://maven.apache.org/POM/4.0.0">
     <!-- ... -->
     <servers>
       <!-- ... -->
       <server>
         <id>sonatype-nexus-snapshots</id>
         <username> ... </username>
         <password> ... </password>
       </server>
       <server>
         <id>sonatype-nexus-staging</id>
         <username> ... </username>
         <password> ... </password>
       </server>
       <!-- ... -->
     </servers>
     <!-- ... -->
   </settings>
   -----

3. Get the source - put your SourceForge username in place of the ...'s:

   PROMPT$ svn co --username=... https://svn.code.sf.net/p/jflex/code/trunk  jflex/trunk 

4. Make sure all changes are committed

   PROMPT$ cd jflex/trunk
   PROMPT$ svn stat


Perform the release
-------------------

1. Run the prepare-release.pl script, which does the following:
   - Changes the version in all POMs by removing all -SNAPSHOT
     suffixes
   - Switches all <scm> URLs from /trunk to /tags/release_X_Y_Z
   - Commits the changed POMs
   - Tags the release by copying /trunk to /tags/release_X_Y_Z
   - svn switch's your working copy to the new tag.
   
   PROMPT$ ./prepare-release.pl
   
2. Stage the release to the Sonatype OSS Maven repository:

   PROMPT$ ./mvn-deploy

3. Build the user manual
 
   PROMPT$ cd tex && make

4. Create the release package

5. Upload the release package and user manual files

6. Update the website

7. Build and upload the JFlex Maven Plugin to SourceForge -
   see the following for more information:
   <http://maven.apache.org/plugins/maven-site-plugin/examples/site-deploy-to-sourceforge.net.html>
   <https://sourceforge.net/apps/trac/sourceforge/wiki/Shell%20and%20File%20Management%20service%20authentication>

   - Create a shell on sourceforge
   
     PROMPT$ ssh -t decamps,jflex@shell.sf.net create

   - Build and deploy the site for the JFlex Maven Plugin
   
     PROMPT$ cd jflex-maven-plugin && mvn -Prelease site

     TODO: test the above step
     TODO: Maybe the above step can be automatically done as part of the mvn-deploy script?
     

Post-release steps
------------------

1. Run the post-release.pl script, which does the following:
   - svn switch's your working copy back to trunk
   - Changes the JFlex version in all POMs to the supplied
     snapshot version (X.Y.Z-SNAPSHOT)
   - Switches all <scm> URLs from /tags/release_X_Y_Z to /trunk
   - Changes the bootstrap JFlex version in the de.jflex:jflex
     POM to the latest release version.
   - Commits the changed POMs

   PROMPT$ ./post-release.pl

%{
  private static final int maxCodePoint = 0xFFFD;
  private final String[] charBlock = new String[maxCodePoint + 1];
  
  private void printOutput() {
    String prevScriptName = charBlock[0];
    int begCodePoint = 0;
    for (int codePoint = 1 ; codePoint <= maxCodePoint ; ++codePoint ) {
      if (codePoint == 0xD800) { // Skip the surrogate blocks
        printBlock(begCodePoint, codePoint - 1, prevScriptName);
        begCodePoint = codePoint = 0xE000;
        prevScriptName = charBlock[codePoint];
        continue;
      }
      String scriptName = charBlock[codePoint];
      if (null == scriptName || ! scriptName.equals(prevScriptName)) {
        printBlock(begCodePoint, codePoint - 1, prevScriptName);
        prevScriptName = scriptName;
        begCodePoint = codePoint;
      }
    }
    printBlock(begCodePoint, maxCodePoint, prevScriptName);
  }
  
  private void printBlock(int begCodePoint, int endCodePoint, String scriptName) {
    System.out.println
      (toHex(begCodePoint) + ".." + toHex(endCodePoint) + "; " + scriptName);    
  }
  
  private String toHex(int codePoint) {
    StringBuilder builder = new StringBuilder();
    String codePointStr = Integer.toString(codePoint, 16).toUpperCase();
    for (int padPos = 0 ; padPos < 4 - codePointStr.length() ; ++padPos) {
      builder.append('0');
    }
    builder.append(codePointStr);
    return builder.toString();
  }
  
  private void setCurCharBlock(String scriptName) {
    charBlock[ (int)yytext().charAt(0) ] = scriptName;
  }
%} 
